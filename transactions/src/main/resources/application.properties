# H2
spring.datasource.driver-class-name=org.h2.Driver
# File H2 data storage
#spring.datasource.url = jdbc:h2:file:/home/daniel/eclipse-workspace/db
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update

# H2 CONSOLE
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# JPA PROPERTIES
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comment = true
logging.level.org.hibernate.type=trace

pring.devtools.livereload.enabled=true

transactions.kafka.boot.server=${KAFKA_BOOT_SERVER:localhost:9092}
transactions.kafka.consumer.group.id=${KAFKA_GROUP_ID:transacoes-group}
transactions.kafka.topic.name=${KAFKA_TOPIC_NAME:transacoes}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transacoes}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transacoes/protocol/openid-connect/certs}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect

